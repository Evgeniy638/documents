version: "3.9"
services:
  # APP
  documents_dbpostgress:
    image: postgres:14
#    volumes:
      # - ./init.sql:/docker-entrypoint-initdb.d/10-init.sql
#      - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: ["-p", "5433", "-c", "logging_collector=on", "-c", "log_directory=/logs", "-c", "log_filename=postgresql.log", "-c", "log_statement=all", "-c", "logging_collector=on", "-c", "log_destination=csvlog"]
    volumes:
      - ./postgresql_log:/logs
    restart: on-failure

  app:
    # image: evgenua/sem7-virt-documents:1.0
    build:
      context: .
      dockerfile: pr3_t2.Dockerfile
    depends_on:
      - "documents_dbpostgress"
    ports:
      - 8080:8080
    restart: on-failure


  # GRAYLOG и выгрузка в неё
  # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
    image: mongo:4.2
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch:
    image: elasticsearch:7.17.6
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - node.max_local_storage_nodes=3
      - "ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:4.3
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      - GRAYLOG_WEB_ENDPOINT_URI=http://127.0.0.1:9000/api
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    restart: always
    depends_on:
      - mongo
      - elasticsearch
      # - log-shipper
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
      # RAW TCP
      - "5555:5555/tcp"
      # RAW UDP
      - "5555:5555/udp"

  log-shipper:
    container_name: filebeat
    image: elastic/filebeat:7.12.0
    entrypoint: filebeat -e -strict.perms=false
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./postgresql_log:/var/app/log

  # ADMINER
  adminer:
    image: adminer
    depends_on:
      - "documents_dbpostgress"
      - "zabbix_dbpostgress"
    ports:
    - 8081:8080

  # GRAFANA
  grafana:
    image: grafana/grafana:8.2.6
    ports:
      - 3000:3000

  # PROMETHEUS
  prometheus:
    image: prom/prometheus:v2.39.1
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.12.0-rc.0
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://root:password@documents_dbpostgress:5433/postgres?sslmode=disable"
    links:
      - documents_dbpostgress
      - prometheus

  # ZABBIX
  zabbix_dbpostgress:
    image: postgres:14
#    volumes:
      # - ./init.sql:/docker-entrypoint-initdb.d/10-init.sql
#      - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: -p 5432

  zabbix_server:
    # Image tag (replace with yours)
    image: zabbix/zabbix-server-pgsql:6.2.0-ubuntu
    environment:
      DB_SERVER_HOST: zabbix_dbpostgress
      DB_SERVER_PORT: 5432
      # Database name (replace with yours)
      POSTGRES_DB: postgres
      # Database user (replace with yours)
      POSTGRES_USER: root
      # Database password (replace with yours)
      POSTGRES_PASSWORD: password
      ZBX_VALUECACHESIZE: 64M
      ZBX_CACHESIZE: 128M
      ZBX_TRENDCACHESIZE: 128M
    ports:
      - "10051:10051"
    restart: unless-stopped
    depends_on:
      - "zabbix_dbpostgress"

  zabbix_web:
    # Image tag (replace with yours)
    image: zabbix/zabbix-web-nginx-pgsql:ubuntu-6.2.0
    environment:
      DB_SERVER_HOST: zabbix_dbpostgress
      DB_SERVER_PORT: 5432
      # Database name (replace with yours)
      POSTGRES_DB: postgres
      # Database user (replace with yours)
      POSTGRES_USER: root
      # Database password (replace with yours)
      POSTGRES_PASSWORD: password
      ZBX_SERVER_HOST: zabbix_server
      ZBX_SERVER_PORT: 10051
      # Timezone (replace with yours) https://www.php.net/manual/en/timezones.php
      PHP_TZ: Europe/Moscow
    restart: unless-stopped
    depends_on:
    - "zabbix_dbpostgress"
    ports:
      - 8082:8080

  zabbix_agent:
    # Image tag (replace with yours)
    image: zabbix/zabbix-agent2:6.2.0-ubuntu
    privileged: true   #access mode for allowing resource access
    # network_mode: "host"
    environment:
      # Zabbix Hostname (replace with yours)
      # Set as DNS name on Zabbix server host configuration screen to make checks of Zabbix server itself
      # ZBX_HOSTNAME: zabbix.heyvaldemar.net
      ZBX_SERVER_HOST: zabbix_server
      # ZBX_SERVER_HOST: 127.0.0.1 #the IP/Dns of Zabbix server
    ports:
      - "10050:10050"
    restart: unless-stopped
    depends_on:
      - zabbix_dbpostgress
      - zabbix_server
